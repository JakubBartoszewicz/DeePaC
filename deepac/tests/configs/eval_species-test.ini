[Data]
# Directory containing the data
DataDir = deepac-tests
# Evaluation dataset name: a prefix for input files
DataSet = sample_val
# Paired dataset name: a prefix for input files ("none" for single reads)
PairedSet = sample_val
# Predictions file name. Assumes reads sorted by species and class!
DataPredictions = deepac-test-logs/deepac-test-e002-predictions-sample_val.npy
# Paired predictions file name ("none" for single reads). Assumes reads sorted by species and class!
PairedPredictions = deepac-test-logs/deepac-test-e002-predictions-sample_val.npy
# Positive .csv: a .csv file with read numbers per species in the pos. class. Assumes reads sorted by species and class!
PosCSV = deepac-tests/deepac-tests-1-reads.csv
# Negative .csv: a .csv file with read numbers per species in the neg. class. Assumes reads sorted by species and class!
NegCSV = deepac-tests/deepac-tests-0-reads.csv
# CSV delimiter
Delim = ;
# Classification threshold
Threshold = 0.5
# Absolute confidence threshold. Defines an interval d = abs(Threshold - ConfidenceThresh)
# If different than the classification Threshold, predictions in [Threshold - d, Threshold + d] remain unclassified.
# This affects READS. Genomes will be classified by averaging predictions of reads passing the threshold.
ReadConfidenceThresh = 0.5
# Absolute confidence threshold. Defines an interval d = abs(Threshold - ConfidenceThresh)
# If different than the classification Threshold, predictions in [Threshold - d, Threshold + d] remain unclassified.
# This affects GENOMES (read collections originating from one genome)
GenomeConfidenceThresh = 0.5
# Number of classes
N_Classes = 2
# Run name
RunName = deepac-tests/deepac-test-logs/deepac-test-species

[Options]
# Draw plots
Do_plots = True
